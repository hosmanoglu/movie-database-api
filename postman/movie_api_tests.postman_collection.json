{
	"info": {
		"_postman_id": "022adbc0-d5fb-4732-a72f-e477dac4f3e9",
		"name": "Movie API Tests",
		"description": "Collection for testing Movie API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19226474"
	},
	"item": [
		{
			"name": "POST /movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has movie ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"imdbId\":\"2343423223\",\r\n    \"name\": \"Test Movie\",\r\n    \"overview\": \"A test movie overview\",\r\n    \"popularity\": 10.5,\r\n    \"voteAverage\": 8.4,\r\n    \"voteCount\": 1500,\r\n    \"releaseDate\": \"2022-01-01\",\r\n    \"genres\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Drama\"\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /movies/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains movie details\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"overview\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/movies/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /movies/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains updated movie details\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.equal(\"Updated Test Movie\");",
							"    pm.expect(jsonData.overview).to.equal(\"An updated test movie overview\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":\"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"name\": \"Updated Test Movie\",\r\n    \"overview\": \"An updated test movie overview\",\r\n    \"popularity\": 12.0,\r\n    \"imdbId\":\"23434676767\",\r\n    \"voteAverage\": 8.5,\r\n    \"voteCount\": 1600,\r\n    \"releaseDate\": \"2022-02-01\",\r\n    \"genres\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Drama\"\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/movies/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /movies/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains deleted movie ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.equal(\"123e4567-e89b-12d3-a456-426614174000\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/movies/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /movies/fetch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3000/movies/fetch",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies",
						"fetch"
					]
				}
			},
			"response": []
		}
	]
}